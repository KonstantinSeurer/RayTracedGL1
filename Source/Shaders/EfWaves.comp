// Copyright (c) 2022 Sultim Tsyrendashiev
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

#version 460

struct EffectWaves_PushConst
{
    float amplitude;
    float speed;
    float multX;
};

#define EFFECT_PUSH_CONST_T EffectWaves_PushConst
#include "EfSimple.inl"

float getMult(const ivec2 pix, float speed, float mult)
{
    return sin(
        globalUniform.time * mult * speed * 4  + 
        pix.x / float(effect_getFramebufSize().x) * mult * 10);
}

void main()
{
    const ivec2 pix = ivec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y);
    
    if (!effect_isPixValid(pix))
    {
        return;
    }

    float tx = getMult(pix, push.custom.speed, push.custom.multX);
    tx *= push.custom.amplitude * push.custom.multX * effect_getFramebufSize().x;

    float ty = getMult(pix, push.custom.speed, 1.0);
    ty *= push.custom.amplitude * effect_getFramebufSize().y;

    vec3 c = effect_loadFromSource(ivec2(pix.x + getProgress() * tx, pix.y + getProgress() * ty));
    effect_storeToTarget(c, pix);
}